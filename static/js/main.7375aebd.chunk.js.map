{"version":3,"sources":["components/PictureIcon.js","components/PictureSelectedModal.js","firebase/config.js","components/MainMenu.js","components/GamePicture.js","components/Stopwatch.js","components/Header.js","components/GameOverHeader.js","components/GameOverModal.js","components/Leaderboard.js","components/Game.js","App.js","index.js"],"names":["PictureIcon","props","url","description","id","handleTargetPictureID","className","src","alt","onClick","bind","this","PictureSelectedModal","handleClick","toggle","state","name","handleChange","event","setState","target","value","data","type","placeholder","onChange","characters","handleGameStart","disabled","Component","firebase","initializeApp","apiKey","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","console","log","firestore","database","FieldValue","serverTimestamp","MainMenu","useState","targetPictureID","setTargetPictureID","pictureSelected","setPictureSelected","mapDatabase","setDatabase","togglePop","getFirebaseData","a","collection","arrayToReturn","get","then","doc","forEach","push","useEffect","map","picture","GamePicture","Stopwatch","timerOn","timerStart","timerTime","startTimer","Date","now","timer","setInterval","stopTimer","clearInterval","centiseconds","Math","floor","slice","seconds","minutes","hours","ref","stopwatchRef","Header","playerName","gameover","charactersToFind","charactersFound","handleNewGame","character","found","GameOverHeader","time","toggleLeaderboard","GameOverModal","Leaderboard","mapName","leaderboard","setLeaderboard","getLeaderboardData","leaderboardData","orderByChild","limitToFirst","once","snapshot","childNode","val","finalTime","player","Game","gameData","incrementCharactersFound","setFinalTime","showGameOverModal","toggleShowGameOverModal","showLeaderboard","toggleShowLeaderboard","useRef","checkIfCharacterIsFound","x","y","abs","togglePopLeaderboardModal","window","scrollTo","gameContainer","document","querySelector","classList","contains","endGame","current","innerHTML","timeInSeconds","timeToSeconds","set","splitTime","replace","split","e","rect","getBoundingClientRect","clientX","left","clientY","top","App","gameBegan","setGameBegan","setPlayerName","setGameData","toString","exists","catch","error","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7375aebd.chunk.js","sourcesContent":["import React from 'react';\n \n\nfunction PictureIcon(props){\n    const{url,description,id,handleTargetPictureID}=props;\n    return(\n        <div className='pictureIconContainer pulsate-bck'>\n            <div className='pictureDescription'>{description}</div>\n            <div className='pictureContainer'>\n                <img \n                    src={url}\n                    alt={description} \n                    className='pictureIcon'\n                    onClick={handleTargetPictureID.bind(this,id)}\n                    />\n            </div>\n        </div>\n    )\n}\n\nexport default PictureIcon;","import React, { Component } from \"react\";\nexport default \nclass PictureSelectedModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      };\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n  handleChange(event) {    \n    this.setState({name: event.target.value});  \n  }\n  handleClick = () => {\n    this.props.toggle();\n  };\n  \n  render() {\n    return (\n     <div className=\"modal\" >\n        <div className=\"modal_content\">\n          <div className='flip-in-hor-top'>\n            <span className=\"close\" onClick={this.handleClick}>&times;</span>\n              <span className='modalTitle'>{this.props.data.description}</span>\n              <div className='modalGrid'>\n              <img \n                  src={this.props.data.url}\n                  alt={this.props.data.description} \n                  className='pictureSelectedIcon'/>\n              <div className='enterName'>\n                <input \n                    type=\"text\" \n                    className='enterNameInput'\n                    name={this.state.name} \n                    placeholder='Enter your name'\n                    onChange={this.handleChange} /> \n              </div>\n              <div \n                className='characterIconContainer'\n                id='characterIcon1'>\n                <img\n                  src={this.props.data.characters[0].url}\n                  alt={this.props.data.characters[0].name}\n                  className='characterIcon'\n                  />\n                <div className='characterName'>{this.props.data.characters[0].name}</div>\n              </div>\n              <div \n                className='characterIconContainer'\n                id='characterIcon2'>\n                <img\n                  src={this.props.data.characters[1].url}\n                  alt={this.props.data.characters[1].name}\n                  className='characterIcon'\n                  />\n                <div className='characterName'>{this.props.data.characters[1].name}</div>\n              </div>\n              <div \n                className='characterIconContainer'\n                id='characterIcon3'>\n                <img\n                  src={this.props.data.characters[2].url}\n                  alt={this.props.data.characters[2].name}\n                  className='characterIcon'\n                  />\n                <div className='characterName'>{this.props.data.characters[2].name}</div>\n              </div>\n              {this.state.name!=='' ?\n                <button\n                    className='beginButton'\n                    onClick={this.props.handleGameStart.bind(this,this.props.id,this.state.name)}>\n                    Start Game\n                  </button> :\n                  <button\n                  className='beginButton'\n                  disabled>\n                  Start Game\n                </button>\n              }\n              </div>               \n          </div>\n      </div>\n     </div>\n    );\n   }\n  } ","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyB7Oe45pVtxQIAmicJ2u9UU5_ZQBXygpJ4\",\n    authDomain: \"where-s-waldo-99745.firebaseapp.com\",\n    projectId: \"where-s-waldo-99745\",\n    databaseURL: \"https://where-s-waldo-99745-default-rtdb.europe-west1.firebasedatabase.app/\",\n    storageBucket: \"where-s-waldo-99745.appspot.com\",\n    messagingSenderId: \"814018642206\",\n    appId: \"1:814018642206:web:cd30ce63dc88334048490f\",\n    measurementId: \"G-FEXF3P1CPC\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  console.log('Firebase is initialized.');\n  const firestore = firebase.firestore();\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp();\n  const database = firebase.database();\n\nexport { firestore,timestamp,database };\n\n","import React, {useState,useEffect} from 'react'\nimport PictureIcon from './PictureIcon'\nimport PictureSelectedModal from './PictureSelectedModal'\nimport {firestore} from '../firebase/config'\n\nfunction MainMenu (props){\n    const {handleGameStart} = props;\n    const [targetPictureID,setTargetPictureID]= useState(-1)\n    const [pictureSelected,setPictureSelected]= useState(false);\n    const [mapDatabase,setDatabase]=useState([]);\n    const handleTargetPictureID = (id) =>{\n        setTargetPictureID(id);\n        togglePop();\n    }\n    const getFirebaseData = async () =>{\n        const database = firestore.collection('pictureData');\n        const arrayToReturn=[];\n        await database.get().then((doc) => {\n            doc.forEach(function(doc) {\n                arrayToReturn.push(doc.data());\n            });\n    })\n    setDatabase(arrayToReturn);\n\n}\n    const togglePop = () => {\n        pictureSelected ? setPictureSelected(false) : setPictureSelected(true);\n       };\n       \n    useEffect(() => {\n        getFirebaseData();\n    }, []);\n\n\n    return(\n        <div className='mainmenuContainer'>\n            <div className='mainmenuText'>\n                <div className='mainmenuTitle'>Where's Waldo?</div>\n                <span className='mainmenuInstructions'>Find Waldo and his friends as quickly as possible!</span>\n            </div>\n            {pictureSelected ? \n                <PictureSelectedModal\n                    toggle={togglePop}\n                    id={targetPictureID}\n                    data={mapDatabase[targetPictureID]}\n                    handleGameStart={handleGameStart} /> : null}\n            <div className='iconsContainer'>\n                {mapDatabase.map(picture =>\n                <PictureIcon\n                    url={picture.url}\n                    description={picture.description}\n                    id={picture.id}\n                    handleTargetPictureID={handleTargetPictureID}\n                    />)}\n            </div>\n        </div>\n    )\n}\n\n\nexport default MainMenu;","function GamePicture(props){\n    const {url,description,handleClick}=props;\n    return(\n        <div className='mainImageContainer'>\n            <img \n                    src={url}\n                    alt={description} \n                    className='mainImage'\n                    onClick={handleClick.bind(this)}\n                    \n            />\n        </div>\n    )\n}\n\nexport default GamePicture;","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass Stopwatch extends Component {\n\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0\n  };\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      });\n    }, 10);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false });\n    clearInterval(this.timer);\n  };\n  componentDidMount(){\n    this.startTimer();\n  }\n  componentWillUnmount(){\n    this.stopTimer();\n  }\n\n\n\n  render() {\n    const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return (\n      <div className=\"Stopwatch\">\n        <div className=\"Stopwatch-display\" ref={this.props.stopwatchRef}>\n          {hours} : {minutes} : {seconds} : {centiseconds}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;","import Stopwatch from './Stopwatch'\n\nfunction Header(props){\n    const {playerName,gameover,charactersToFind,charactersFound,stopwatchRef,handleNewGame}=props;\n    console.log(charactersToFind);\n\n    return(\n        <div className='headerContainer'>\n            <div className='headerButtonContainer'>\n                <button className='headerButton'\n                        onClick={handleNewGame}>\n                        I Give Up\n                </button>\n            </div>\n            <div className='playerName'>\n                {playerName}\n            </div>\n            {!gameover ?\n                <Stopwatch\n                stopwatchRef={stopwatchRef}\n                />\n                 :\n                null\n            }\n            <div className='charactersToFind'>\n                {charactersToFind.map(character =>\n                character.found ? \n                <div className='characterHeaderIconContainer foundCharacter scale-up-hor-center'>\n                    <img\n                    src={character.url}\n                    alt={character.name}\n                    className='characterHeaderIcon'\n                    />\n                </div>\n                :\n                <div className='characterHeaderIconContainer'>\n                    <img\n                    src={character.url}\n                    alt={character.name}\n                    className='characterHeaderIcon'\n                    />\n                </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","\n\nfunction GameOverHeader(props){\n    const {time,playerName,handleNewGame,toggleLeaderboard}=props;\n    return(\n        <div className='headerContainer'>\n            <div/>\n            <div/>\n            <div className='timeAndName'>\n                <div className='gameOverHeaderText'>\n                    {playerName}\n                </div>\n                <div className='gameOverHeaderText'>\n                    Final Time - {time}\n                </div>\n            </div>\n            <div className='headerButtonContainer'>\n                <button className='headerButton'\n                    onClick={handleNewGame}>\n                    New Game\n                </button>\n                <button className='headerButton'\n                    onClick={toggleLeaderboard}>\n                    Leaderboard\n                </button>\n            </div>\n        \n        </div>\n    )\n}\n\nexport default GameOverHeader;","import React, { Component } from \"react\";\nexport default \nclass GameOverModal extends Component {\n    \n    handleClick = () => {\n        this.props.toggle();\n    }\n    render(){\n        return(\n            <div className=\"modal\">\n                <div className=\"gameOverModalContent\">\n                    <div className=\"close\" onClick={this.handleClick}>&times;</div>\n                    <div>\n                        <div className='modalGameOverTitle fade-in-fwd'>Game Over!</div>\n                        <div className='modalFinalTime fade-in-fwd-delay'>Your Time - {this.props.time}</div>\n                    </div>\n                    <div className='modalButtonsContainer'>\n                        <button \n                            className='modalButton'\n                            onClick={this.props.handleNewGame.bind(this)}>\n                            New Game\n                        </button>\n                        <button\n                            className='modalButton'\n                            onClick={this.props.toggleLeaderboard.bind(this)}>\n                            Leaderboard\n                        </button>\n                    </div>            \n                </div>\n            </div>\n        )\n    }\n\n  \n\n}","import {database} from '../firebase/config';\nimport React, {useState,useEffect} from 'react';\n\n\nfunction Leaderboard (props){\n    const {time,name,mapName,toggleLeaderboard} = props;\n    const [leaderboard,setLeaderboard]=useState([]);\n\n    const getLeaderboardData = async () =>{\n        const leaderboardData=database.ref(mapName);\n        const arrayToReturn=[];\n        await leaderboardData.orderByChild('seconds').limitToFirst(10).once('value', function(snapshot){\n            snapshot.forEach(function(childNode){\n                arrayToReturn.push({\n                    name:childNode.val().playerName,\n                    time:childNode.val().finalTime,\n                    });\n                })\n        });\n        setLeaderboard(arrayToReturn);\n    };\n\n    useEffect(() => {\n        getLeaderboardData();\n    }, []);\n\n    return(\n        <div className=\"modal\">\n            <div className=\"gameOverModalContent pushbottom \">\n                <span className=\"close\" onClick={toggleLeaderboard}>&times;</span>\n                <div className='modalGameOverTitle'>Leaderboard</div>\n                <div className='mapName'>Map : {mapName}</div>\n                <div className='leaderboardContainer flip-in-hor-top'>\n                    {leaderboard.map(player=>\n                        <div className='nameAndTimeContainer'>\n                            <div className='leaderboardName'>{player.name}</div>\n                            <div className='leaderboardTime'>{player.time}</div>\n                        </div>\n                    )}\n                    <div className='nameAndTimeContainer yourScore'>\n                        <div className='leaderboardName'>{name}</div>\n                        <div className='leaderboardTime'>{time}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\nexport default Leaderboard;\n","import GamePicture from './GamePicture'\nimport Header from './Header'\nimport React, {useState,useRef} from 'react';\nimport GameOverHeader from './GameOverHeader';\nimport GameOverModal from './GameOverModal';\nimport Leaderboard from './Leaderboard';\nimport {database} from '../firebase/config';\n\n\n\n\nfunction Game(props){\n    const {gameData,playerName,handleNewGame} = props;\n    const [charactersFound,incrementCharactersFound]=useState(0);\n    const [finalTime,setFinalTime]=useState('');\n    const [showGameOverModal,toggleShowGameOverModal] = useState(false);\n    const [showLeaderboard,toggleShowLeaderboard] = useState(false);\n    const stopwatchRef=useRef(null);\n\n    const handleClick = (e) => {\n        let rect = e.target.getBoundingClientRect();\n        let x = e.clientX - rect.left; //x position within the element.\n        let y = e.clientY - rect.top;  //y position within the element.\n        if (checkIfCharacterIsFound(x,y) && charactersFound===2)\n        {\n            endGame();\n        }  \n    }\n    const checkIfCharacterIsFound = (x,y) =>{\n        for (const character of gameData.characters){\n            if(Math.abs(x-character.x)<=40 && Math.abs(y-character.y)<=40 && !character.found)\n            {\n                character.found=true;\n                incrementCharactersFound(charactersFound+1);\n                return true;\n            }\n        }\n        return false;\n    }\n    const togglePopGameOverModal = () => {\n        showGameOverModal ? toggleShowGameOverModal(false) : toggleShowGameOverModal(true);\n        document.querySelector('.gameContainer').classList.toggle('modalOpened');\n    };\n    const togglePopLeaderboardModal = () =>{\n        window.scrollTo(0,0);\n        let gameContainer =document.querySelector('.gameContainer');\n        if (!gameContainer.classList.contains('modalOpened'))\n            gameContainer.classList.toggle('modalOpened');\n        else if (!showGameOverModal)\n            gameContainer.classList.toggle('modalOpened');\n        showLeaderboard ? toggleShowLeaderboard(false) : toggleShowLeaderboard(true);\n    }\n    const endGame = async () =>{\n        window.scrollTo(0,0);\n        let time=stopwatchRef.current.innerHTML;\n        let timeInSeconds=timeToSeconds(time);\n        setFinalTime(time);\n        toggleShowGameOverModal(true);\n        document.querySelector('.gameContainer').classList.toggle('modalOpened');\n        database.ref(gameData.description).push().set({\n            playerName:playerName,\n            finalTime:time,\n            seconds:timeInSeconds,\n        });\n        \n    }\n    const timeToSeconds = (time) =>{\n        let splitTime=time.replace(/\\s/g, '').split(':');\n        return (+splitTime[0]) * 60 * 60 + (+splitTime[1]) * 60 + (+splitTime[2]) +(splitTime[3]/100)\n    }\n\n    return(\n        <div className='gameContainer'>\n            {finalTime!=='' ? \n            <GameOverHeader\n                time={finalTime}\n                playerName={playerName}\n                handleNewGame={handleNewGame}\n                toggleLeaderboard={togglePopLeaderboardModal}\n            />\n             :\n            <Header\n                playerName={playerName}\n                gameover={showGameOverModal}\n                charactersToFind={gameData.characters}\n                charactersFound={charactersFound}\n                stopwatchRef={stopwatchRef}\n                handleNewGame={handleNewGame}\n            />}\n            {showGameOverModal ?\n                !showLeaderboard ?\n                    <GameOverModal\n                        time={finalTime}\n                        name={playerName}\n                        handleNewGame={handleNewGame}\n                        toggle={togglePopGameOverModal}\n                        toggleLeaderboard={togglePopLeaderboardModal}/> :\n                    <Leaderboard\n                        time={finalTime}\n                        name={playerName}\n                        mapName={gameData.description}\n                        toggleLeaderboard={togglePopLeaderboardModal}/> :\n                showLeaderboard ?\n                    <Leaderboard\n                        time={finalTime}\n                        name={playerName}\n                        mapName={gameData.description}\n                        toggleLeaderboard={togglePopLeaderboardModal}/> :\n                    null\n                }\n            <GamePicture\n                url={gameData.url}\n                characters={gameData.characters}\n                description={gameData.description}\n                handleClick={handleClick}\n                />\n        </div>\n    )\n}\nexport default Game;","import './App.css';\nimport './animations.css';\nimport React, {useState} from 'react';\nimport MainMenu from './components/MainMenu'\nimport Game from './components/Game'\nimport {firestore} from './firebase/config'\n\n\nfunction App() {\n  const [gameBegan,setGameBegan]=useState(false);\n  const [playerName,setPlayerName]=useState('');\n  const [gameData,setGameData]=useState([]);\n  const handleGameStart = async (id,name) =>{\n    await getFirebaseData(id);\n    setPlayerName(name);\n    setGameBegan(true);\n  }\n  const handleNewGame = () =>{\n    setGameBegan(false);\n  }\n  const getFirebaseData = async (id) =>{\n    const data = firestore.collection('pictureData').doc(id.toString());\n    await data.get().then(function(doc) {\n        if (doc.exists) {\n            setGameData(doc.data());\n        } else {\n            console.log(\"No such document!\");\n        }\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n    });\n}\n  return (\n    <div className=\"App\">\n      {gameBegan ? \n        <Game\n          gameData={gameData}\n          playerName={playerName}\n          handleNewGame={handleNewGame}\n        /> :\n        <MainMenu\n          handleGameStart={handleGameStart}\n        />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}